openapi: "3.0.1"
info:
  title: "Api-module-3-s3-integration"
paths:
  /:
    get:
      responses:
        "400":
          description: "400 response"
        "500":
          description: "500 response"
        "200":
          description: "200 response"
          headers:
            Content-Length:
              schema:
                type: "string"
            Timestamp:
              schema:
                type: "string"
            Content-Type:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::${AWS::AccountId}:role/RoleForAPIGatewayS3Integration"
        httpMethod: "GET"
        uri: "arn:aws:apigateway:${AWS::Region}:s3:path/demo-bucket-s3-proxy-${AWS::AccountId}"
        responses:
          "4\\d{2}":
            statusCode: "400"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Content-Type: "integration.response.header.Content-Type"
              method.response.header.Content-Length: "integration.response.header.Content-Length"
              method.response.header.Timestamp: "integration.response.header.Date"
          "5\\d{2}":
            statusCode: "500"
        passthroughBehavior: "when_no_match"
        type: "aws"
  /{filename}:
    get:
      parameters:
      - name: "filename"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "400 response"
        "500":
          description: "500 response"
        "200":
          description: "200 response"
          headers:
            Content-Length:
              schema:
                type: "string"
            Timestamp:
              schema:
                type: "string"
            Content-Type:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::${AWS::AccountId}:role/RoleForAPIGatewayS3Integration"
        httpMethod: "GET"
        uri: "arn:aws:apigateway:${AWS::Region}:s3:path/demo-bucket-s3-proxy-${AWS::AccountId}/{key}"
        responses:
          "4\\d{2}":
            statusCode: "400"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Content-Type: "integration.response.header.Content-Type"
              method.response.header.Content-Length: "integration.response.header.Content-Length"
              method.response.header.Timestamp: "integration.response.header.Date"
          "5\\d{2}":
            statusCode: "500"
        passthroughBehavior: "when_no_match"
        requestParameters:
          integration.request.path.key: "method.request.path.filename"
        passthroughBehavior: "when_no_match"
        type: "aws"
    put:
      parameters:
      - name: "filename"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "400 response"
        "500":
          description: "500 response"
        "200":
          description: "200 response"
          headers:
            Content-Length:
              schema:
                type: "string"
            Timestamp:
              schema:
                type: "string"
            Content-Type:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::${AWS::AccountId}:role/RoleForAPIGatewayS3Integration"
        httpMethod: "PUT"
        uri: "arn:aws:apigateway:${AWS::Region}:s3:path/demo-bucket-s3-proxy-${AWS::AccountId}/{key}"
        responses:
          "4\\d{2}":
            statusCode: "400"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Content-Type: "integration.response.header.Content-Type"
              method.response.header.Content-Length: "integration.response.header.Content-Length"
              method.response.header.Timestamp: "integration.response.header.Date"
          "5\\d{2}":
            statusCode: "500"
        passthroughBehavior: "when_no_match"
        requestParameters:
          integration.request.path.key: "method.request.path.filename"
        passthroughBehavior: "when_no_match"
        type: "aws"
    delete:
      parameters:
      - name: "filename"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "400 response"
        "500":
          description: "500 response"
        "200":
          description: "200 response"
          headers:
            Content-Length:
              schema:
                type: "string"
            Timestamp:
              schema:
                type: "string"
            Content-Type:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::${AWS::AccountId}:role/RoleForAPIGatewayS3Integration"
        httpMethod: "DELETE"
        uri: "arn:aws:apigateway:${AWS::Region}:s3:path/demo-bucket-s3-proxy-${AWS::AccountId}/{key}"
        responses:
          "4\\d{2}":
            statusCode: "400"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Content-Type: "integration.response.header.Content-Type"
              method.response.header.Content-Length: "integration.response.header.Content-Length"
              method.response.header.Timestamp: "integration.response.header.Date"
          "5\\d{2}":
            statusCode: "500"
        passthroughBehavior: "when_no_match"
        requestParameters:
          integration.request.path.key: "method.request.path.filename"
        passthroughBehavior: "when_no_match"
        type: "aws"
components:
  schemas:
    Empty:
      title: "Empty Schema"
      type: "object"
x-amazon-apigateway-binary-media-types:
- "plain/text"
