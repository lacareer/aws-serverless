AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: >
   module3-lambda-rest-api: Sample SAM Template for module3-lambda-rest-api

Globals:

  # Enable Logs
  Api:
    MethodSettings:
      - ResourcePath: "/*"
        HttpMethod: "*"
        DataTraceEnabled: True
        LoggingLevel: INFO
        MetricsEnabled: True
  Function:
    Timeout: 3
    Runtime: nodejs18.x

Resources:

  # Example API Gateway 
  LambdaIntegrationExampleAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      OpenApiVersion: 3.0.3
      DefinitionBody: # an OpenApi definition
        "Fn::Transform":
          Name: "AWS::Include"
          Parameters:
            Location: "openapi.yaml"
      EndpointConfiguration:
        Type: REGIONAL

  #Lambda Function with Proxy Integration for single method GET
  LambdaProxySingleMethodFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: ./handlers
      Handler: proxy-example.handler

  #Lambda Function with Proxy Integration for any method and path ANY /{proxy+) 
  LambdaProxyAnyMethodFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: ./handlers
      Handler: proxy-example.handler
                        
  #Lambda Function with Custom Integration for any method and path ANY /{proxy+) 
  LambdaCustomFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: ./handlers
      Handler: proxy-example.handler

  # Execution Role for lambda functions
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: AllowLambdaExec
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource: [
                  !GetAtt LambdaProxySingleMethodFunction.Arn, 
                  !GetAtt LambdaProxyAnyMethodFunction.Arn,
                  !GetAtt LambdaCustomFunction.Arn
                ]        

Outputs:
  Endpoint:
    Description: API Gateway Endpoint
    Value:
      Fn::Sub: https://${LambdaIntegrationExampleAPI}.execute-api.${AWS::Region}.amazonaws.com/dev/resource
